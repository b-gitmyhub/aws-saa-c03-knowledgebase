name: Docs+Flashcards Pipeline (merge-safe)

on:
  push:
    branches: [ main ]
    paths:
      - 'notes_raw/**'
      - 'scripts/**'
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material genanki

      - name: Transform raw notes -> docs (skip if you already have your own)
        if: hashFiles('scripts/transform_notes.py') != ''
        run: python scripts/transform_notes.py

      - name: Generate flashcards & quizzes
        run: python scripts/generate_flashcards_quizzes.py

      - name: Build site
        run: mkdocs build --site-dir site

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Build Anki deck (.apkg)
        run: |
          python - << 'PY'
          import genanki, csv, pathlib
          deck = genanki.Deck(20510303, 'AWS SAA-C03 Flashcards')
          model = genanki.Model(
            1607392319, 'Simple',
            fields=[{'name':'Front'},{'name':'Back'}],
            templates=[{'name':'Card 1','qfmt':'{{Front}}','afmt':'{{Front}}<hr id=answer>{{Back}}'}])
          csv_path = pathlib.Path('flashcards/anki.csv')
          with csv_path.open(encoding='utf-8') as f:
            next(f)
            import csv as _csv
            for row in _csv.reader(f):
              if len(row)>=2:
                deck.add_note(genanki.Note(model=model, fields=[row[0], row[1]]))
          genanki.Package(deck).write_to_file('flashcards/AWS_SAA-C03.apkg')
          print('Wrote flashcards/AWS_SAA-C03.apkg')
          PY

      - name: Upload flashcards artifact
        uses: actions/upload-artifact@v4
        with:
          name: flashcards
          path: flashcards/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
